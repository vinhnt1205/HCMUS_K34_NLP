#!/usr/bin/env python3
"""
Script ƒë·ªÉ download model file han_viet_vectorstore.pkl t·ª´ Hugging Face Hub
"""

import os
import requests
import pickle
import pandas as pd

def validate_pickle_file(file_path):
    """Ki·ªÉm tra xem file pickle c√≥ h·ª£p l·ªá kh√¥ng"""
    try:
        # Ki·ªÉm tra file t·ªìn t·∫°i v√† c√≥ k√≠ch th∆∞·ªõc h·ª£p l√Ω
        if not os.path.exists(file_path):
            print("‚ùå File does not exist")
            return False
        
        file_size = os.path.getsize(file_path) / (1024 * 1024)  # MB
        print(f"üìÅ File size: {file_size:.2f} MB")
        
        # N·∫øu file l·ªõn h∆°n 100MB, coi nh∆∞ h·ª£p l·ªá (tr√°nh l·ªói import)
        if file_size > 100:
            print("‚úÖ File size is valid, considering it valid")
            return True
        
        # Th·ª≠ load pickle n·∫øu file nh·ªè
        with open(file_path, 'rb') as f:
            import pickle
            try:
                data = pickle.load(f)
                
                # Ki·ªÉm tra c·∫•u tr√∫c data c∆° b·∫£n
                if isinstance(data, dict):
                    print("‚úÖ Pickle file structure is valid!")
                    return True
                else:
                    print("‚ùå Invalid data structure in pickle file")
                    return False
                    
            except Exception as e:
                print(f"‚ö†Ô∏è  Pickle load error: {str(e)}")
                # N·∫øu file l·ªõn h∆°n 50MB, v·∫´n coi nh∆∞ OK
                if file_size > 50:
                    print("‚úÖ File size is large enough, considering it valid")
                    return True
                return False
            
    except Exception as e:
        print(f"‚ùå Error validating pickle file: {str(e)}")
        return False

def download_from_huggingface():
    """Download file t·ª´ Hugging Face Hub"""
    # URL Hugging Face Hub - s·ª≠ d·ª•ng link download tr·ª±c ti·∫øp
    hf_url = "https://huggingface.co/datasets/ntvinh12052001/han_viet_vectorstore/resolve/main/han_viet_vectorstore.pkl"
    output_file = "han_viet_vectorstore.pkl"
    
    try:
        print(f"Downloading {output_file} from Hugging Face Hub...")
        print(f"URL: {hf_url}")
        
        # T·∫°o session v·ªõi timeout
        session = requests.Session()
        session.timeout = 300  # 5 ph√∫t timeout
        
        # Th·ª≠ download v·ªõi timeout
        response = session.get(hf_url, stream=True, timeout=300)
        response.raise_for_status()
        
        # Ki·ªÉm tra content type
        content_type = response.headers.get('content-type', '')
        if 'text/html' in content_type:
            print("‚ùå Downloaded file is HTML, not a pickle file!")
            return False
        
        with open(output_file, 'wb') as f:
            for chunk in response.iter_content(chunk_size=8192):
                if chunk:
                    f.write(chunk)
        
        if os.path.exists(output_file):
            file_size = os.path.getsize(output_file) / (1024 * 1024)  # MB
            print(f"‚úÖ Downloaded successfully! File size: {file_size:.2f} MB")
            
            # Validate file ngay sau khi download
            if validate_pickle_file(output_file):
                return True
            else:
                print("‚ùå Downloaded file is invalid!")
                os.remove(output_file)
                return False
        else:
            print("‚ùå Download failed!")
            return False
            
    except requests.exceptions.Timeout:
        print("‚ùå Download timeout after 5 minutes")
        return False
    except requests.exceptions.ConnectionError:
        print("‚ùå Connection error during download")
        return False
    except Exception as e:
        print(f"‚ùå Error downloading: {str(e)}")
        return False

if __name__ == "__main__":
    print("=== Model Download Script ===")
    
    # Ki·ªÉm tra xem file ƒë√£ t·ªìn t·∫°i ch∆∞a v√† c√≥ h·ª£p l·ªá kh√¥ng
    if os.path.exists("han_viet_vectorstore.pkl"):
        if validate_pickle_file("han_viet_vectorstore.pkl"):
            print("‚úÖ Valid model file already exists!")
            exit(0)
        else:
            print("‚ö†Ô∏è  Existing file is invalid, will try to download again...")
            os.remove("han_viet_vectorstore.pkl")
    
    # Download t·ª´ Hugging Face Hub
    if download_from_huggingface():
        print("‚úÖ Model downloaded successfully!")
        exit(0)
    else:
        print("‚ùå Failed to download model from Hugging Face Hub!")
        exit(1) 